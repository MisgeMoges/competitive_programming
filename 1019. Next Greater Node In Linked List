# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def nextLargerNodes(self, head: Optional[ListNode]) -> List[int]:
        # I will use monotonic stack to store decreasing values
        
        arr = []
        while head:
            arr.append(head.val)
            head = head.next
        result = [0]*len(arr)
        stack = []

        for i in range(len(arr)):
            while stack and arr[i] > arr[stack[-1]]:
                index = stack.pop()
                result[index] = arr[i]
            else:
                stack.append(i)
        return result
